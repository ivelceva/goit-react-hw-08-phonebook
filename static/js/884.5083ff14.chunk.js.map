{"version":3,"file":"static/js/884.5083ff14.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","redux/selectors.js","webpack://react-homework-template/./src/components/contactForm/ContactForm.module.css?fd94","components/contactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.jsx","webpack://react-homework-template/./src/components/userContact/UserContact.module.css?62d4","components/userContact/UserContact.jsx","webpack://react-homework-template/./src/components/contactList/ContactList.module.css?7e3b","components/contactList/ContactList.jsx","pages/Contacts.js","webpack://react-homework-template/./src/pages/PagesStyle.module.css?9dfc"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__ttXmo\",\"contactFormName\":\"ContactForm_contactFormName__nkneU\",\"inputNumber\":\"ContactForm_inputNumber__3VNHe\",\"contactFormBtn\":\"ContactForm_contactFormBtn__jwg4I\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    addNewContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  const addNewContact = (name, number) => {\n    let result = contacts.find(item => item.name === name);\n    if (result) {\n      return alert(`${name} is already in contacts`);\n    }\n    const newUser = { name, number, id: nanoid() };\n    dispatch(addContact(newUser));\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.contactFormLabel}>\n        <p className={css.contactFormName}>Name:</p>\n        <input\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"add your name...\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.label}>\n        <p className={css.contactFormName}>Number:</p>\n        <input\n          className={css.inputNumber}\n          name=\"number\"\n          type=\"tel\"\n          placeholder=\"add valid number...\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={css.contactFormBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsFilter\":\"Filter_contactsFilter__3fWww\",\"find\":\"Filter_find__22ia9\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice';\nimport { getFilter } from '../../redux/selectors';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = ({ target: { value } }) => {\n     dispatch(setFilter(value));\n  };\n\n  return (\n    <div className={css.contactsFilter}>\n      <label>\n        <p className={css.find}>Find contacts by name:</p>\n        <input\n          className={css.input}\n          name=\"filter\"\n          type=\"text\"\n          placeholder=\"search...\"\n          value={filter}\n          onChange={handleChangeFilter}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"UserContact_contacts__7vuTu\",\"name\":\"UserContact_name__osPkg\",\"number\":\"UserContact_number__WKWk3\"};","import PropTypes from 'prop-types';\nimport css from './UserContact.module.css';\n\nconst UserContact = ({ name, number }) => {\n  return (\n    <div className={css.contacts}>\n      <p className={css.name}>{name} :</p>\n      <p className={css.number}>{number}</p>\n    </div>\n  );\n};\n\nUserContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default UserContact;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__+SpO1\",\"user\":\"ContactList_user__Mj+B2\",\"contactListBtn\":\"ContactList_contactListBtn__34ij6\"};","import UserContact from '../userContact/UserContact';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const contactSearch = contacts.filter(({ name }) => {\n    return name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  return (\n    <ul className={css.contactList}>\n      {contactSearch.map(({ name, number, id }) => (\n        <li className={css.user} key={id}>\n          <UserContact name={name} number={number} />\n          <button\n            className={css.contactListBtn}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from '../components/contactForm/ContactForm';\nimport Filter from '../components/filter/Filter';\nimport ContactList from '../components/contactList/ContactList';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport { useDispatch } from 'react-redux';\nimport css from './PagesStyle.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h2 className={css.formTitle}>Contacts</h2>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"menuWrapper\":\"PagesStyle_menuWrapper__C9Z6p\",\"title\":\"PagesStyle_title__dz92W\",\"subTitle\":\"PagesStyle_subTitle__zXJGt\",\"linkContainer\":\"PagesStyle_linkContainer__FBc4J\",\"link\":\"PagesStyle_link__+wlCV\",\"formTitle\":\"PagesStyle_formTitle__NI5U4\"};"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","getContacts","state","contacts","items","getFilter","filter","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handleChange","event","target","value","addNewContact","find","item","alert","newUser","addContact","className","css","onSubmit","preventDefault","type","placeholder","onChange","pattern","title","required","setFilter","contactSearch","toLowerCase","includes","map","onClick","deleteContact","useEffect","fetchContacts"],"sourceRoot":""}